{
	"name": "DF_order_details",
	"properties": {
		"description": "dataflow for working on order details",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_order_details_input",
						"type": "DatasetReference"
					},
					"name": "input"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_order_outpu",
						"type": "DatasetReference"
					},
					"name": "outputOrders"
				}
			],
			"transformations": [
				{
					"name": "unitPrice",
					"description": "creating a column for unit price"
				},
				{
					"name": "castQuantity",
					"description": "Cast columns to Quanity types"
				},
				{
					"name": "addQuantity",
					"description": "updating the quantity so that price get updated "
				},
				{
					"name": "newPrice",
					"description": "price updation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as string,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as string,",
				"          OrderTimestamp as string,",
				"          Price as string,",
				"          CustomerID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> input",
				"castQuantity derive(unit_price = divide(Price, Quantity)) ~> unitPrice",
				"input cast(output(",
				"          Quantity as integer,",
				"          Price as double",
				"     ),",
				"     errors: true) ~> castQuantity",
				"unitPrice derive(Quantity = add(Quantity, 5)) ~> addQuantity",
				"addQuantity derive(Price = multiply(Quantity, unit_price)) ~> newPrice",
				"newPrice sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          OrderID as string,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as string,",
				"          OrderTimestamp as string,",
				"          Price as string,",
				"          CustomerID as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> outputOrders"
			]
		}
	}
}